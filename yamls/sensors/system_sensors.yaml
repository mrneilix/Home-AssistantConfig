  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_use
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
  - platform: uptime
    name: uptime
    unit_of_measurement: minutes

  - platform: rpi_power
    text_state: true

  - platform: openhardwaremonitor
    host: !secret desktop_ip

  - platform: websocket_api
  - platform: version

  - platform: time_date
    display_options:
      - 'time'
      - 'beat'

  - platform: rest
    resource: https://pypi.python.org/pypi/homeassistant/json
    name: Latest version
    value_template: '{{ value_json.info.version }}'
    scan_interval: 3600

  - platform: template
    sensors:
## Uptime Templated ####
      since_last_boot_templated:
        friendly_name: System Uptime
        entity_id: sensor.time
        icon_template: mdi:clock
        value_template: >-
            {% set time = ((as_timestamp(now()) - as_timestamp(states.sensor.last_boot.state)) )| int %}
            {% set minutes = ((time % 3600) / 60) | int %}
            {% set hours = ((time % 86400) / 3600) | int %}
            {% set days = (time / 86400) | int %}

            {%- if time < 60 -%}
              Less than a minute
            {%- else -%}
              {%- if days > 0 -%}
                {{ days }}d
              {%- endif -%}
              {%- if hours > 0 -%}
                {%- if days > 0 -%}
                  {{ ' ' }}
                {%- endif -%}
                {{ hours }}h
              {%- endif -%}
              {%- if minutes > 0 -%}
                {%- if days > 0 or hours > 0 -%}
                  {{ ' ' }}
                {%- endif -%}
                {{ minutes }}m
              {%- endif -%}
            {%- endif -%}

      ha_uptime:
        friendly_name: Home Assistant Uptime
        entity_id: sensor.time
        icon_template: mdi:clock
        value_template: >-
          {% if states.sensor.uptime.state is defined %}
          {% set time = states.sensor.uptime.state | int %}
          {% set minutes = (time % 60) | int %}
          {% set hours = ((time % 1440) / 60) | int %}
          {% set days = (time / 1440) | int %}

          {%- if time < 1 -%}
            Less than a minute
          {%- else -%}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                1 hour
              {%- else -%}
                {{ hours }} hours
              {%- endif -%}
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if minutes == 1 -%}
                1 minute
              {%- else -%}
                {{ minutes }} minutes
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
          {% else %}
          0
          {% endif %}

      last_boot_date_time:
        friendly_name: Last Boot
        icon_template: mdi:clock
        value_template: "{{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M') }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%m/%d') }}"

      network_downloaded:
        friendly_name: Downloaded
        icon_template: mdi:server-network
        unit_of_measurement: "GiB"
        value_template: "{{ ( states('sensor.gfiberrouter_bytes_received') | float / 1073741824 ) | round(2) }}"

      network_uploaded:
        friendly_name: Uploaded
        icon_template: mdi:server-network
        unit_of_measurement: "GiB"
        value_template: "{{ ( states('sensor.gfiberrouter_bytes_sent') | float / 1073741824 ) | round(2) }}"