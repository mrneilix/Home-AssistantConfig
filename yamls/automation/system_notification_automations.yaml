- id: notify_vera_down
  alias: 'Notify Vera Down'
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.vera_up
    to: 'off'
    from: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
  action:
    - service: notify.html5
      data_template:
        message: "Vera Down"
        title: "Vera Down"
        data:
          tag: 'Vera-down'
          renotify: 0
          icon: '/local/pictures/vera.png'
          badge: '/local/pictures/vera.png'
          
- id: notify_restart_complete
  alias: 'Notify Restart Complete'
  initial_state: false
  trigger:
    platform: state
    entity_id: input_boolean.restart_complete
    to: 'on'
  condition:
    - condition: time
      after: '08:00:00'
      before: '23:00:00'
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
  action:
    - service: notify.html5
      data_template:
        message: "Home Assistant Restart Complete"
        title: "Restart Complete"
        data:
          tag: 'restart_complete'
          renotify: 0
          icon: '/local/pictures/restart-ha-badge.png'
          badge: '/local/pictures/restart-ha-badge.png'
          
- id: notifications_off_at_11pm
  alias: 'Notifications Off at 11PM'
  initial_state: false
  trigger:
    - platform: time
      at: '23:00:00'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.notifications_on
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.weather_notifications

- id: notifications_on_if_neil_is_home_at_8am
  alias: 'Notifications On if Neil is Home at 8AM'
  initial_state: false
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: state
      entity_id: device_tracker.neil
      state: 'home'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.notifications_on
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.weather_notifications

- id: notify_update_available
  alias: 'Notify Update Available'
  initial_state: false
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.html5
    data_template: 
      title: 'New Home Assistant Release'
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."