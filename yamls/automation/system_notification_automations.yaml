- id: notify_vera_down
  alias: 'Notify Vera Down'
  trigger:
    - platform: state
      entity_id: binary_sensor.vera_up
      to: 'off'
      from: 'on'
    - platform: time
      at: '08:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
    - condition: state
      entity_id: binary_sensor.vera_up
      state: 'off'
  action:
    - service: script.notify_vera_down

- id: notify_restart_complete
  alias: 'Notify Restart Complete'
  trigger:
    platform: state
    entity_id: input_boolean.restart_complete
    to: 'on'
  condition:
    - condition: time
      after: '08:00:00'
      before: '23:00:00'
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
    - condition: template
      value_template: "{{ not is_state('sensor.pi_zero_uptime', 'unknown') }}"
  action:
    - service: script.notify_restart_complete

- id: notifications_off_at_11pm
  alias: 'Notifications Off at 11PM'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.notifications_on
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.weather_notifications

- id: notifications_on_if_neil_is_home_at_8am
  alias: 'Notifications On if Neil is Home at 8AM'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: state
      entity_id: device_tracker.neil
      state: 'home'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.notifications_on
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.weather_notifications

- id: notify_update_available
  alias: 'Notify Update Available'
  trigger:
    - platform: state
      entity_id: updater.updater
    - platform: time
      at: '09:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
    - condition: template
      value_template: "{{ ( states('sensor.latest_version') | string ) != ( states('sensor.current_version') | string ) }}"
  action:
    - service: script.notify_update_available