# - id: notify_vera_down
  # alias: 'Notify Vera Down'
  # trigger:
    # - platform: state
      # entity_id: binary_sensor.vera_up
      # to: 'off'
      # from: 'on'
    # - platform: time
      # at: '08:00:00'
  # condition:
    # - condition: state
      # entity_id: input_boolean.notifications_on
      # state: 'on'
    # - condition: state
      # entity_id: input_boolean.restart_complete
      # state: 'on'
    # - condition: state
      # entity_id: binary_sensor.vera_up
      # state: 'off'
  # action:
    # - service: script.notify_vera_down

- id: notify_restart_complete
  alias: 'Notify Restart Complete'
  trigger:
    platform: state
    entity_id: input_boolean.restart_complete
    to: 'on'
  condition:
    - condition: time
      after: '08:00:00'
      before: '23:00:00'
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
    - condition: template
      value_template: "{{ (((as_timestamp(now()) - as_timestamp(states.sensor.last_boot.state)) )| int) > 360}}"
  action:
    - service: script.notify_restart_complete

- id: notifications_off_at_11pm
  alias: 'Notifications Off at 11PM'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.notifications_on

- id: notifications_on_if_neil_is_home_at_8am
  alias: 'Notifications On if Neil is Home at 8AM'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: state
      entity_id: person.neil
      state: 'home'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.notifications_on

- id: notifications_update_weather_input_boolean
  alias: 'Notifications Update Weather Input Boolean'
  trigger:
    platform: state
    entity_id: input_boolean.notifications_on
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service_template: > 
          {%- if is_state('input_boolean.notifications_on', 'on') %}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
      data:
        entity_id: input_boolean.weather_notifications
- id: notifications_send_pihole_status
  alias: 'Send Pihole Status'
  trigger:
    platform: state
    entity_id: switch.pi_hole
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: joaoapps_join.phone_send_tasker
      data_template:
        command: >
          {% if is_state('switch.pi_hole', 'on') %}
            pihole=:=on
          {% else %}
            pihole=:=off
          {% endif %}

- id: system_turn_pi_hole_prompt_turn_on
  alias: 'Notification to Turn Pihole On'
  trigger:
    platform: state
    entity_id: switch.pi_hole
    to: 'off'
    for:
      hours: 1
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
    - condition: state
      entity_id: input_boolean.notifications_on
      state: 'on'
  action:
    - service: notify.html5
      data:
        message: 'Pihole has been off for a while'
        title: 'Want Your Adblocker Back?'
        data: 
          renotify: 0
          tag: 'adblocker'
          icon: '/local/link_icons/pihole.png'
          badge: 'mdi:pi-hole'
          actions: [
            {
              action: "block_ads",
              title: "Wanna Block Ads?"
            },
            {
              action: "dismiss",
              title: "Dismiss"
            }
      ]


- id: pihole_notification_confirmed
  alias: 'Notification to Turn Pihole On Confirmed'
  trigger:
    platform: event
    event_type: html5_notification.clicked
    event_data:
      action: block_ads
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.pi_hole
