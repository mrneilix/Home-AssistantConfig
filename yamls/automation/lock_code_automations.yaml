# Parents
- id: lock_parents_lock_code_toggle
  alias: 'Lock Parents Lock Code Toggle'
  trigger:
    - platform: state
      entity_id: input_boolean.parents_lock_code
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service_template: >
          {% if is_state('input_boolean.parents_lock_code', 'on') %}
            script.lock_set_parents_lock_code
          {% else %}
            script.lock_clear_parents_lock_code
          {% endif %}

- id: lock_set_temp_lock_code_input_number
  alias: 'Lock Set Temporary Lock Code Input Number'
  trigger:
    - platform: numeric_state
      entity_id: sensor.lock_set_temp_code_input_number
      above: 1000
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - delay: 00:00:01
    - service_template: >
          {% if is_state('input_boolean.temp_lock_code_set', 'on') %}
            script.lock_clear_temp_code
          {% else %}
            script.do_nothing
          {% endif %}
    - delay: 00:00:05
    - wait_template: "{{ is_state('input_boolean.temp_lock_code_set', 'off') }}"
      timeout: '00:01:00'
      continue_on_timeout: 'true'
    - service: script.lock_set_temp_lock_code_input_number

- id: lock_clear_temp_lock_code
  alias: 'Lock Clear Temp Lock Code'
  trigger:
    - platform: state
      entity_id: input_boolean.temp_lock_code_set
      to: 'off'
      from: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.lock_clear_temp_code

- id: lock_reset_last_code_used_if_blank
  alias: 'Lock Reset Last Code Used If Blank'
  trigger:
    - platform: state
      entity_id: sensor.last_lock_code_name
      to: 'Blank'
      for:
        seconds: 10
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.last_lock_code_used

- id: lock_set_temp_lock_code_ifttt
  alias: 'Lock Set Temporary Lock Code IFTTT'
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
      value: '{{ trigger.event.data.value }}'