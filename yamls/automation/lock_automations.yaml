# Lock Battery Level
- id: lock_battery_low_notify
  alias: 'Lock Battery Low Notify'
  trigger:
    platform: numeric_state
    entity_id: sensor.schlage_camelot_battery_level
    below: '50'
    above: '25'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.notify_lock_battery_low
          
- id: lock_battery_very_low_notify
  alias: 'Lock Battery Very Low Notify'
  trigger:
    platform: numeric_state
    entity_id: sensor.schlage_camelot_battery_level
    below: '25'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.notify_lock_battery_very_low

# Notify if unlocked without code
- id: lock_door_unlocked_notify_unknown_code
  alias: 'Lock Door Unlocked Notify Unknown Code'
  trigger:
    platform: state
    entity_id: input_boolean.door_open
    to: 'on'
    for:
      seconds: 20
  condition:
    - condition: state
      entity_id: input_boolean.presence_automations
      state: 'on'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
    - condition: state
      entity_id: binary_sensor.anyone_home
      state: 'off'
  action:
    - service: script.notify_lock_unlocked_unknown_code

# Auto Lock
- id: lock_door_auto_lock
  alias: 'Lock Door Auto Lock'
  trigger:
    - platform: state
      entity_id: lock.schlage_camelot
      to: 'unlocked'
      from: 'locked'
    - platform: state
      entity_id: input_boolean.door_open
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.autolock
      state: 'on'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - delay:
        seconds: '{{ states("input_number.autolock_delay") | int }}'
    - condition: state
      entity_id: input_boolean.autolock
      state: 'on'
    - service: script.lock_auto_lock_door


- id: lock_auto_lock_door_switch_on
  alias: 'Lock Auto Lock Door Switch On'
  trigger:
    platform: state
    entity_id: input_boolean.autolock
    to: 'on'
    from: 'off'
  condition:
    - condition: state
      entity_id: lock.schlage_camelot
      state: 'unlocked'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.lock_auto_lock_door_on

- id: lock_auto_lock_door_switch_off
  alias: 'Lock Auto Lock Door Switch Off'
  trigger:
    platform: state
    entity_id: input_boolean.autolock
    to: 'off'
    from: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.lock_auto_lock_door_off

- id: lock_auto_lock_door_switch_update_locked
  alias: 'Lock Auto Lock Door Switch Update Locked'
  trigger:
    platform: state
    entity_id: lock.schlage_camelot
    to: 'locked'
    from: 'unlocked'
  condition:
    - condition: state
      entity_id: input_boolean.autolock
      state: 'off'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.lock_auto_lock_door_on

- id: lock_set_temp_lock_code_input_number
  alias: 'Lock Set Temporary Lock Code Input Number'
  trigger:
    - platform: numeric_state
      entity_id: sensor.lock_set_temp_code_input_number
      above: 1000
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - delay: 00:00:01
    - service: browser_mod.close_popup
    - service_template: >
          {% if is_state('switch.temp_lock_code', 'on') %}
            script.lock_clear_temp_code
          {% else %}
            script.do_nothing
          {% endif %}
    - delay: 00:00:05
    - wait_template: "{{ is_state('switch.temp_lock_code', 'off') }}"
      timeout: '00:01:00'
      continue_on_timeout: 'true'
    - service: script.lock_set_temp_lock_code_input_number

- id: lock_minimote_button_1_pressed
  alias: 'Lock Minimote button 1 Pressed'
  trigger:
    platform: state
    entity_id: sensor.minimote_72
    to: '1'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: lock.unlock
      entity_id: lock.schlage_camelot

- id: lock_minimote_button_3_pressed
  alias: 'Lock Minimote button 3 Pressed'
  trigger:
    platform: state
    entity_id: sensor.minimote_72
    to: '3'
  condition:
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: script.lock_auto_lock_door_off

- id: lock_door_opened_update_input_boolean
  alias: 'Lock Door Opened Update Input Boolean'
  trigger:
    platform: state
    entity_id: binary_sensor.front_door_sensor_73
  condition:
    - condition: state
      entity_id: input_boolean.door_open
      state: 'off'
    - condition: state
      entity_id: input_boolean.restart_complete
      state: 'on'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.door_open
- id: lock_set_temp_code_ifttt
  alias: Lock Set Temp Code by IFTTT
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  condition:
    condition: template
    value_template: "{{ trigger.event.data.service == 'input_number.set_value' }}"
  action:
    - service: input_number.set_value
      data_template:
        entity_id: "{{ trigger.event.data.entity_id }}"
        value: "{{ trigger.event.data.value }}"
