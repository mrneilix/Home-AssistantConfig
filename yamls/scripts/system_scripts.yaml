startup_scripts:
  alias: Startup Scripts
  sequence:
    - service: lock.lock
      entity_id: lock.schlage_camelot
    - service: script.startup_input_booleans
    - delay: 00:00:02
    - service: script.couch_light_update_input_text
    - delay: 00:00:02
    - service: script.startup_presence
    - delay: 00:00:30
    - service_template: >
          {% if (((as_timestamp(now()) - as_timestamp(states.sensor.last_boot.state)) )| int) < 360 %}
            script.system_restart_if_just_rebooted
          {% else %}
            script.system_turn_on_automations_on_restart
          {% endif %}

startup_presence:
  alias: Startup Presence
  sequence:
    - service_template: >
          {% if is_state('binary_sensor.anyone_home', 'off') %}
            script.thermostat_leave_set_temp
          {% else %}
            script.startup_someone_home
          {% endif %}

startup_input_booleans:
  alias: Startup Input Booleans
  sequence:
    - service_template: > 
          {%- if now().hour >= 8 and now().hour < 23 and is_state('device_tracker.neil', 'home')%}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
      data:
        entity_id: input_boolean.notifications_on
    - service_template: > 
          {%- if now().hour >= 8 and now().hour < 23 and is_state('device_tracker.neil', 'home') %}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
      data:
        entity_id: input_boolean.weather_notifications
    - service_template: > 
          {% if is_state('device_tracker.butters', 'home') %}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
      data:
        entity_id: input_boolean.butters_home

startup_someone_home:
  alias: Startup Someone Home
  sequence:
    - service: switch.turn_off
      entity_id: switch.yi_power
    - service_template: >
          {% if is_state('binary_sensor.dark_out', 'on') and now().hour >= 8 and now().hour < 23 %}
            script.presence_arrive_dark_out
          {% else %}
            script.do_nothing
          {% endif %}
    - service: script.thermostat_home_set_temp

restart_homeassistant:
  alias: Restart Home Assistant
  sequence:
    - service: homeassistant.restart

system_turn_on_automations_on_restart:
  alias: System Turn On Automations On Restart
  sequence:
    - service: automation.turn_on
      entity_id: group.all_automations
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.restart_complete


confirm_system_reboot:
  alias: Confirm System Reboot
  sequence:
    - service: notify.html5
      data:
        message: "Are you sure you want to reboot?"
        data: {
          renotify: 0,
          tag: 'reboot',
          icon: '/local/pictures/restart-ha.png',
          badge: '/local/pictures/restart-ha.png',
          actions: [
            {
              action: "confirm_system_reboot",
              title: "Yes"
            },
            {
              action: "dismiss",
              title: "Dismiss"
            },
      ]
    }

system_reboot:
  alias: Reboot System
  sequence:
    - delay: 00:00:02
    - service: shell_command.reboot_hassio

desktop_restart_plex:
  alias: Restart Plex
  sequence:
    - service: shell_command.desktop_restart_plex

system_git_backup:
  alias: System Git Backup
  sequence:
    - service: shell_command.git_backup

system_desktop_display_off:
  alias: System Desktop Display Off
  sequence:
    - service: shell_command.desktop_screen_off

system_magic_mirror_rotate_display_on:
  alias: System Magic Mirror Rotate Display On
  sequence:
    - service: mqtt.publish
      data:
        topic: 'START_ROTATION'

system_magic_mirror_rotate_display_off:
  alias: System Magic Mirror Rotate Display Off
  sequence:
    - service: mqtt.publish
      data:
        topic: 'STOP_ROTATION'

system_magic_mirror_rotate_display_toggle:
  alias: System Magic Mirror Rotate Display Toggle
  sequence:
    - service_template: >
          {%- if is_state('binary_sensor.magic_mirror_display_rotation_off', 'on') %}
            script.system_magic_mirror_rotate_display_on
          {% else %}
            script.system_magic_mirror_rotate_display_off
          {% endif %}
do_nothing:
  alias: Do Nothing
  sequence:
    - delay: 00:00:01
system_run_startup_shell_commands_on_boot:
  alias: Run Startup Shell Commands on Boot
  sequence:
    - service: shell_command.update_index_html
    - delay: 00:00:10
    - service: shell_command.download_nano_if_not_installed